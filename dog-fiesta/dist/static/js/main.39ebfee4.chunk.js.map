{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authAction.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/layout/Footer.js","components/dashboard/FirstPage.js","components/dashboard/SecondPage.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectAction.js","components/project/ProjectDetails.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/project/Listing.js","components/AboutUs/AboutUs.js","components/LongText.js","components/Interests/InterestSummary.js","components/Interests/InterestList.js","components/Interests/ListingInterests.js","components/Interests/Interests.js","components/FormatParagraph.js","components/Interests/InterestDetail.js","components/Advices/AdviceSummary.js","components/Advices/AdvicesList.js","components/Advices/ListingAdvices.js","components/Advices/Advices.js","components/Advices/AdviceDetail.js","components/Breeds/BreedSummary.js","components/Breeds/BreedsList.js","components/Breeds/ListingBreeds.js","components/Breeds/Breeds.js","components/Breeds/BreedDetail.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignOutLink","state","firebase","links","uid","layout_SignInLink","layout_SignOutLink","Footer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","style","whiteSpace","Component","FirstPage","SecondPage","Fragment","src","alt","Dashboard","FirstPage_FirstPage","id","SecondPage_SecondPage","compose","projects","firestore","ordered","firestoreConnect","collection","orderBy","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","defineProperty","target","_this$props","authError","react_router","onSubmit","htmlFor","onChange","creds","credentials","_ref","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateProject","title","content","isUploading","progress","image","url","handleChangeTitle","event","handleChangeContent","handleUploadStart","handleProgress","handleUploadError","error","handleUploadSuccess","filename","concat","toConsumableArray","storage","ref","child","getDownloadURL","handleCreate","createProject","lib_default","accept","name","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","project","authorId","add","objectSpread","authorFirstName","authorLastName","createdAt","Date","ownProps","match","params","data","moment","toDate","calendar","ProjectSummary","ProjectList","selectedOption","selected","handleOptionChange","currentList","newList","filter","item","lc","toLowerCase","includes","push","map","project_ProjectSummary","Listing","project_ProjectList","AboutUs","LongText","showAll","showMore","showLess","limit","length","toShow","substring","InterestSummary","interest","components_LongText","paragraph1","date","InterestList","currentPage","handlePageChange","page","_this2","interests","total","index","Interests_InterestSummary","react_paginating_esm","pageCount","pages","hasNextPage","hasPreviousPage","previousPage","nextPage","totalPages","getPageItemProps","assign","pageValue","onPageChange","ListingInterests","call","filtered","bind","assertThisInitialized","placeholder","Interests_InterestList","Interests","now","undefined","Interests_ListingInterests","FormatParagraph","paragraph","split","join","paragraph2","image2","paragraph3","AdviceSummary","advice","AdvicesList","advices","Advices_AdviceSummary","ListingAdvices","Advices_AdvicesList","Advices","Advices_ListingAdvices","BreedSummary","breed","BreedsList","breeds","Breeds_BreedSummary","ListingBreeds","Breeds_BreedsList","Breeds","Breeds_ListingBreeds","width","height","App","layout_Navbar","exact","path","component","ProjectDetails","InterestDetail","AdviceDetail","BreedDetail","layout_Footer","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","console","log","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39ebfee4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\nconst SignInLink = (props) => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>Нов оглас</NavLink></li>\r\n            <li><a href='/' onClick={props.signOut}>Одјави се</a></li>\r\n            <li>\r\n                <NavLink to='/' className='btn green lighten-1'>\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLink)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGOUT_SUCCESS' });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/signup'>Регистрирај се</NavLink></li>\r\n            <li><NavLink to='/signin'>Најави се</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport SignInLink from './SignInLink'\r\nimport SignOutLink from './SignOutLink'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignInLink profile={profile} /> : <SignOutLink />\r\n    return (\r\n        <nav className='row small-nav nav-wrapper grey darken-3'>\r\n            <div className='container'>\r\n                <Link to='/' className='brand-logo'>DogFiesta</Link>             \r\n                {links}\r\n                <NavLink to='/projects' className='right'>Огласи</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React, { Component } from 'react'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer white-text grey darken-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col m4 text-white center\">\r\n                            <h3>НАШИ ЦЕЛИ</h3>\r\n                            <ul>\r\n                                <li>1. Развување на свеста и одговорноста кон животните за хумано постапување со нив\r\n                            <p style={{ 'whiteSpace': 'pre-wrap' }}></p> </li>\r\n                                <li>2. Хумано намалување на бројот на бездомните животни\r\n                            <p style={{ 'whiteSpace': 'pre-wrap' }}></p> </li>\r\n                                <li>3. Нега на напуштени животни</li>\r\n                                <li>4. Спречување на злоупотреба на животни\r\n                            <p style={{ 'whiteSpace': 'pre-wrap' }}></p> </li>\r\n                                <li>5. Промовирање на идејата за прифаќање на различностите\r\n                            <p style={{ 'whiteSpace': 'pre-wrap' }}></p> </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col m4 center\">\r\n                            <h3>КОНТАКТ</h3>\r\n                            <p>Телефон: 02/123478</p>\r\n                            <p>Е-пошта: info@dogfiesta.com</p>\r\n                        </div>\r\n                        <div className=\"col m4 center\">\r\n                            <h3>АДРЕСА</h3>\r\n                            <p>ул. Партизански одреди бр.123/23-Скопје</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className=\"footer-copyright center\">\r\n                            <div className=\"container\">\r\n                                <p>© 2019 Copyright DogFiesta. Сите права се задржани</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\n\r\nexport class FirstPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dog-text-box container\">          \r\n                <div className='row main-text'>\r\n                    <h1>Кучињата не се целиот наш живот,\r\n                <p style={{ 'whiteSpace': 'pre-wrap' }}></p>\r\n                        но тие го прават нашиот живот целосен. </h1>\r\n                </div>\r\n                <div className='row'>\r\n                    <a className='btn green z-depth-0' href=\"/breeds\">Раси</a>\r\n                    <a className='btn green z-depth-0' href=\"/advices\">Совети</a>\r\n                    <a className='btn green z-depth-0' href=\"/interests\">Занимливости</a>\r\n                    <a className='btn green z-depth-0' href=\"/aboutUs\">За нас</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstPage\r\n","import React, { Component } from 'react'\r\nimport './styleDashboard.css'\r\n\r\nexport class SecondPage extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='row center'>\r\n                    <h2>Кучето е единственото суштество на светот,\r\n                        <p style={{ 'whiteSpace': 'pre-wrap' }}></p>\r\n                        кое те сака тебе повеќе отколку што се сака себеси.</h2>\r\n                </div>\r\n                <div className=\"row center figure\">\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Ротвајлер</a></h3>\r\n                            <img src=\"/img/rottweiler.jpg\" alt=\"rottweiler\"></img>\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Бигл</a></h3>\r\n                            <img src=\"/img/beagle.jpg\" alt=\"beagle\"></img>\r\n                        </figure> </div>\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Боксер</a></h3>\r\n                            <img src=\"/img/boxer.jpg\" alt=\"boxer\"></img>\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Доберман</a></h3>\r\n                            <img src=\"/img/doberman.jpg\" alt=\"doberman\"></img>\r\n                        </figure>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row center figure\">\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Француски булдог</a></h3>\r\n                            <img src=\"/img//french bulldog.jpg\" alt=\"French bulldog\"></img>\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Германски овчар</a></h3>\r\n                            <img src=\"/img/german shepherd.jpg\" alt=\"German Shepherd\"></img>\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Златен ретривер</a></h3>\r\n                            <img src=\"/img/golden retriever.jpg\" alt=\"Golden Retriever\"></img>\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <figure>\r\n                            <h3><a href=\"Breeds/index.html\" className=\"section-link\">Лабрадор</a></h3>\r\n                            <img src=\"/img/labrador.jpg\" alt=\"Labrador\"></img>\r\n                        </figure>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondPage\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { FirstPage } from './FirstPage';\r\nimport { SecondPage } from './SecondPage';\r\nimport './styleDashboard.css'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container dashboard'>\r\n                <div className=\"first_page\">\r\n                    <FirstPage />\r\n                </div>\r\n                <div id=\"second_page\">\r\n                    <SecondPage />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] }\r\n    ])\r\n)(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className=\"col m2\"></div>\r\n                    <form className='white col m8 form-showing' onSubmit={this.handleSubmit}>\r\n                        <h5 className='grey-text text-darken-3'>Најави се</h5>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='email'>Е-пошта</label>\r\n                            <input type='email' id='email' onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='password'>Лозинка</label>\r\n                            <input type='password' id='password' onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <button className='btn green linghten-1 z-depth-0'>Најави се</button>\r\n                            <div className='red-text center'>\r\n                                {authError ? <p>Неуспешно најавување</p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"row\">\r\n                    <div className='col m2'></div>\r\n                    <form className='white col m8 form-showing' onSubmit={this.handleSubmit}>\r\n                        <h5 className='grey-text text-darken-3'>Регистрирај се</h5>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='email'>E-пошта</label>\r\n                            <input type='email' id='email' onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='password'>Лозинка</label>\r\n                            <input type='password' id='password' onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='firstName'>Име</label>\r\n                            <input type='text' id='firstName' onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='lastName'>Презиме</label>\r\n                            <input type='text' id='lastName' onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <button className='btn green linghten-1 z-depth-0'>Регистрирај се</button>\r\n                            <div className=\"center red-text\">\r\n                                {authError ? <p>{authError}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatcToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatcToProps)(SignUp)\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content: \"\",\r\n        isUploading: false,  \r\n        progress: 0,\r\n        image: [],\r\n        url: \"\", \r\n    };\r\n\r\n    handleChangeTitle = event => this.setState({ title: event.target.value });\r\n    handleChangeContent = event => this.setState({ content: event.target.value });\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n    handleProgress = progress => this.setState({ progress });\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n    };\r\n    handleUploadSuccess = (filename) => {\r\n        this.setState({ image: [...this.state.image, filename] , progress: 100, isUploading: false });\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ url: url }))\r\n    };\r\n\r\n    handleCreate = () => {\r\n        this.props.createProject(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (     \r\n            <div className='row'>\r\n                <div className=\"col m2\"></div>\r\n                <form className='white center col m8 form-showing'>\r\n                    <h5 className='grey-text text-darken-3'>Креирај Нов Оглас</h5>           \r\n                    <div className='input-field'>\r\n                        <label htmlFor='title'>Наслов</label>\r\n                        <input type='text' value={this.state.title} id='title' onChange={this.handleChangeTitle} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='content'>Содржина на оглас</label>\r\n                        <textarea id='content' value={this.state.content} className='materialize-textarea' onChange={this.handleChangeContent}></textarea>\r\n                    </div>\r\n                    <label className=\"progress-label\">Прогрес:</label>\r\n                    {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n                    {this.state.url && <img src={this.state.url} />}\r\n                    <FileUploader\r\n                        accept=\"image/*\"\r\n                        name=\"image\"\r\n                        randomizeFilename\r\n                        storageRef={firebase.storage().ref(\"images\")}\r\n                        onUploadStart={this.handleUploadStart}\r\n                        onUploadError={this.handleUploadError}\r\n                        onUploadSuccess={this.handleUploadSuccess}\r\n                        onProgress={this.handleProgress}\r\n                    />\r\n                    <button className='btn light-green z-depth-0' onClick={this.handleCreate}>Креирај</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project } = props;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details \">\r\n        <div className=\"card z-depth-0 form-showing\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text form-showing\">\r\n            <img src={project.url}></img>\r\n            <div>Објавено од {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Огласот се вчитува...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col m2\"></div>\r\n            <div className='col m8 z-depth-0 card grey-text text-darken-3 form-showing'>\r\n                <span className='card-title'>{project.title}</span>\r\n                <p>Објавено од {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React, { Component } from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProjectList extends Component {\r\n    state = {\r\n        selectedOption: '',\r\n        selected: []\r\n    }\r\n\r\n    handleOptionChange = (e) => {\r\n        let currentList = [];\r\n        let newList = [];\r\n        if (e.target.value !== \"\") {\r\n            currentList = this.props.projects;\r\n            newList = currentList.filter(item => {\r\n                const lc = item.title.toLowerCase();\r\n                const filter = e.target.value.toLowerCase();\r\n                if (lc.includes(filter)) {\r\n                    newList.push(item);\r\n                    this.setState({\r\n                        ...this.state,\r\n                        selected: newList\r\n                    })\r\n                    return this.state;\r\n                }\r\n            });\r\n            if (e.target.value === 'all') {\r\n                this.setState({\r\n                    selected: this.props.projects\r\n                })  \r\n                return this.state;\r\n            }\r\n            this.setState({\r\n                selectedOption: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { projects } = this.props;\r\n        if (this.state.selectedOption !== '') {\r\n            projects = this.state.selected;\r\n        }\r\n        return (\r\n            <div className='project-list section'>\r\n                <div className='row center'>\r\n                    <label className='label-checkbox'>\r\n                        <input type=\"radio\" name=\"decision\" value=\"podaruva\" className='input-checkbox' onChange={this.handleOptionChange} />\r\n                        Се подарува\r\n                    </label>\r\n                    <label className='label-checkbox'>\r\n                        <input type=\"radio\" name=\"decision\" value=\"prodava\" className='input-checkbox' onChange={this.handleOptionChange} />\r\n                        Се продава\r\n                    </label>\r\n                    <label className='label-checkbox'>\r\n                        <input type=\"radio\" name=\"decision\" value=\"all\" className='input-checkbox' onChange={this.handleOptionChange} />\r\n                        Сите огласи\r\n                    </label>\r\n                </div>\r\n                {projects && projects.map(project => {\r\n                    return (\r\n                        <Link to={'/project/' + project.id} key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport ProjectList from '../project/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport './styleProjects.css';\r\n\r\nclass Listing extends Component {  \r\n    render() {\r\n        const { projects } = this.props;\r\n        return (\r\n            <div>\r\n                <ProjectList projects={projects} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] }\r\n    ])\r\n)(Listing)\r\n","\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class AboutUs extends Component {\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col m4 about-us\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to='/breeds'>\r\n                                <a className=\"btn green darken-2 my-btns\">Раси</a>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/advices'>\r\n                                <a className=\"btn green darken-2 my-btns\">Совети</a>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/interests'>\r\n                                <a className=\"btn green darken-2 my-btns\">Занимливости</a>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/aboutus'>\r\n                                <a className=\"btn green darken-2 my-btns active\">За нас</a>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='col m8'>\r\n                    <h2 className=\"white-text center\" id=\"aboutUs\">За нас</h2>\r\n                    <p className=\"white-text aboutUs-text\"><b>&emsp;DogFiesta</b> го сочинуваат волонтери чија примарна цел е вдомување на бездомни животни, спречување на нехуманиот однос, како и развивање на свеста и одговорноста кај човекот кон животните.\r\n                        Здружението со едукации и поткревање свест кај населението долгорочно настојува да го реши проблемот со напуштање на животни, развување на свеста и одговорноста кон животните за хумано постапување со нив.</p>\r\n\r\n                    <p className=\" white-text aboutUs-text\">НАПОМЕНУВАМЕ дека не располагаме со сопствен простор за привремено згрижување, па до вдомување животните се згрижени во домовите на наши членови и волонтери, а доколку е потребно и во хотел за миленичиња.\r\n                        </p>\r\n\r\n                    <h4 className='card-title white-text'>НАШИ ЦЕЛИ</h4>\r\n                    <ul className=\"about-us-list white-text aboutUs-text\">\r\n                        <li>->Развување на свеста и одговорноста кон животните за хумано постапување со нив</li>\r\n                        <li>->Хумано намалување на бројот на бездомните животни </li>\r\n                        <li>->Промовирање на идејата за прифаќање на различностите</li>\r\n                        <li>->Развивање на културата за грижа на слаби, немоќни, отфрлени, болни, незаштитени и неприфатени животни</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutUs\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\n\r\nclass LongText extends Component { \r\n    state = { showAll: false }\r\n    showMore = () => this.setState({showAll: true}); \r\n    showLess = () => this.setState({showAll: false});\r\n    render() {\r\n        const {content, limit} = this.props;\r\n        const {showAll} = this.state;\r\n        if(content.length<=limit) {\r\n            return <div>{content}</div>\r\n        }\r\n        if(showAll) {\r\n            return <div>\r\n                {content}\r\n                <a onClick={this.showLess}>Read less</a>\r\n            </div>\r\n        }\r\n        const toShow = content.substring(0,limit)+\"...\";\r\n        return <div>\r\n            {toShow}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default LongText","import React from 'react'\r\nimport LongText from '../LongText';\r\n\r\nconst InterestSummary = ({ interest }) => {\r\n    return (\r\n        <div className='card z-depth-0 form-showing'>\r\n            <div className='card-content grey-text text-darken-3'>\r\n                <div className='row'>\r\n                    <div className='col m4'>\r\n                        <img src={interest.image} alt='img' className='img-content'></img>\r\n                    </div>\r\n                    <div className='col m8'>\r\n                        <span className='card-title'>{interest.title}</span>\r\n                        <LongText content={interest.paragraph1} limit={200} />\r\n                        <p>{interest.date}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterestSummary","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport InterestSummary from './InterestSummary';\r\nimport Pagination from \"react-paginating\";\r\n\r\nclass InterestList extends Component {\r\n    state = {\r\n        currentPage: 1\r\n    };\r\n\r\n    handlePageChange = (page, e) => {\r\n        this.setState({\r\n            currentPage: page\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const limit = 2;\r\n        const interests = this.props.interests;\r\n        const pageCount = 3;\r\n        const total = interests.length * limit;\r\n        const { currentPage } = this.state;\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {interests.map((interest, index) => (\r\n                        <Link to={'/interest/' + interest.id} key={interest.id}>\r\n                            {index >= ((currentPage - 1) * limit) && index < (currentPage * limit) ? <InterestSummary interest={interest} /> : null}\r\n                        </Link>\r\n                    ))}\r\n                </ul>\r\n                <div className='row center'>\r\n                    <Pagination\r\n                        total={total}\r\n                        limit={limit}\r\n                        pageCount={pageCount}\r\n                        currentPage={currentPage}\r\n                    >\r\n                        {({\r\n                            pages,\r\n                            currentPage,\r\n                            hasNextPage,\r\n                            hasPreviousPage,\r\n                            previousPage,\r\n                            nextPage,\r\n                            totalPages,\r\n                            getPageItemProps\r\n                        }) => (\r\n                                <div>\r\n                                    <button className='btn green'\r\n                                        {...getPageItemProps({\r\n                                            pageValue: 1,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        Прва\r\n                    </button>\r\n                                    {hasPreviousPage && (\r\n                                        <button className='btn green'\r\n                                            {...getPageItemProps({\r\n                                                pageValue: previousPage,\r\n                                                onPageChange: this.handlePageChange\r\n                                            })}\r\n                                        >\r\n                                            {\"<\"}\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {pages.map(page => {\r\n                                        let activePage = null;\r\n                                        if (currentPage === page) {\r\n                                        }\r\n                                        return (\r\n                                            <button className='btn green'\r\n                                                {...getPageItemProps({\r\n                                                    pageValue: page,\r\n                                                    key: page,                                     \r\n                                                    style: activePage,\r\n                                                    onPageChange: this.handlePageChange\r\n                                                })}\r\n                                            >\r\n                                                {page}\r\n                                            </button>\r\n                                        );\r\n                                    })}\r\n\r\n                                    {hasNextPage && (\r\n                                        <button className='btn green'\r\n                                            {...getPageItemProps({\r\n                                                pageValue: nextPage,\r\n                                                onPageChange: this.handlePageChange\r\n                                            })}\r\n                                        >\r\n                                            {\">\"}\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    <button className='btn green'\r\n                                        {...getPageItemProps({\r\n                                            pageValue: totalPages,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        Последна\r\n                    </button>\r\n                                </div>\r\n                            )}\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InterestList\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport InterestList from './InterestList'\r\n\r\nclass ListingInterests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filtered: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let currentList = [];\r\n        let newList = [];\r\n        if (e.target.value !== \"\") {\r\n            currentList = this.props.interests;\r\n            newList = currentList.filter(item => {\r\n                const lc = item.title.toLowerCase();\r\n                const filter = e.target.value.toLowerCase();\r\n                if (lc.includes(filter)) {\r\n                    newList.push(item);\r\n                    this.setState({\r\n                        filtered: newList\r\n                    })\r\n                    return this.state;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                filtered: newList\r\n            })\r\n            return this.state;\r\n        }\r\n    }\r\n    render() {\r\n        let { interests } = this.props;\r\n        if (this.state.filtered.length !== 0) {\r\n            interests = this.state.filtered\r\n        }\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Пребарај...\" />\r\n                <InterestList interests={interests} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        interests: state.firestore.ordered.interests\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'interests' }\r\n    ])\r\n)(ListingInterests)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport ListingInterests from './ListingInterests'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Interests extends Component {\r\n    render() {\r\n        const { interests } = this.props;\r\n        const now = interests !== undefined ? (<ListingInterests interests={interests} />) : (<p className='white-text'>no</p>)\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col m4 about-us\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to='/breeds'>\r\n                                <button className=\"btn green darken-2 my-btns\">Раси</button>               \r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/advices'>\r\n                                <button className=\"btn green darken-2 my-btns\">Совети</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/interests'>\r\n                                <button className=\"btn green darken-2 my-btns\">Занимливости</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/aboutus'>\r\n                                <button className=\"btn green darken-2 my-btns\">За нас</button>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='col m8'>\r\n                    <h2 className=\"white-text center\" id=\"aboutUs\">Занимливости</h2>\r\n                    {now}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        interests: state.firestore.ordered.interests\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'interests' }\r\n    ])\r\n)(Interests)\r\n","function FormatParagraph(paragraph) {\r\n    var result = paragraph.split('<').join(\"\\r\\n\");\r\n    return result;\r\n  }\r\n\r\nexport default FormatParagraph","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport FormatParagraph from '../FormatParagraph'\r\n\r\nconst InterestDetail = (props) => {\r\n  const { interest } = props;\r\n  if (interest) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title center\">{interest.title}</span>\r\n            <p id='modify'>{FormatParagraph(interest.paragraph1)}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text center\">\r\n            <img src={interest.image}></img>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div id='modify'>{FormatParagraph(interest.paragraph2)}</div>\r\n          </div>\r\n          {interest.image2 !== undefined ?\r\n            (<div className=\"card-action grey lighten-4 grey-text center\">\r\n              <img src={interest.image2}></img>\r\n            </div>)\r\n            : null}\r\n          {interest.paragraph3 !== undefined ?  \r\n             (<div className=\"card-content\">\r\n              <div id='modify'>{FormatParagraph(interest.paragraph3)}</div>\r\n            </div>) \r\n            : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Sе вчитува...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const interests = state.firestore.data.interests;\r\n  const interest = interests ? interests[id] : null\r\n  return {\r\n    interest: interest\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'interests' }\r\n  ])\r\n)(InterestDetail) \r\n","import React from 'react'\r\nimport LongText from '../LongText';\r\n\r\nconst AdviceSummary = ({ advice }) => {\r\n    return (\r\n        <div className='card z-depth-0 form-showing'>\r\n            <div className='card-content grey-text text-darken-3'>\r\n                <div className='row'>\r\n                    <div className='col m4'>\r\n                        <img src={advice.image} alt='img' className='img-content'></img>\r\n                    </div>\r\n                    <div className='col m8'>\r\n                        <span className='card-title'>{advice.title}</span>\r\n                        <LongText content={advice.paragraph1} limit={200} />\r\n                        <p>{advice.date}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdviceSummary","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AdviceSummary from './AdviceSummary';\r\nimport Pagination from \"react-paginating\";\r\n\r\nclass AdvicesList extends Component {\r\n    state = {\r\n        currentPage: 1\r\n    };\r\n\r\n    handlePageChange = (page, e) => {\r\n        this.setState({\r\n            currentPage: page\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const limit = 2;\r\n        const advices = this.props.advices;\r\n        const pageCount = 3;\r\n        const total = advices.length * limit;\r\n        const { currentPage } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {advices.map((advice, index) => (\r\n                        <Link to={'/advice/' + advice.id} key={advice.id}>\r\n                            {index >= ((currentPage - 1) * limit) && index < (currentPage * limit) ? <AdviceSummary advice={advice} /> : null}\r\n                        </Link>\r\n                    ))}\r\n                </ul>\r\n                <div className='row center'>\r\n\r\n                    <Pagination\r\n                        total={total}\r\n                        limit={limit}\r\n                        pageCount={pageCount}\r\n                        currentPage={currentPage}\r\n                    >\r\n                        {({\r\n                            pages,\r\n                            currentPage,\r\n                            hasNextPage,\r\n                            hasPreviousPage,\r\n                            previousPage,\r\n                            nextPage,\r\n                            totalPages,\r\n                            getPageItemProps\r\n                        }) => (\r\n                                <div>\r\n                                    <button className='btn green'\r\n                                        {...getPageItemProps({\r\n                                            pageValue: 1,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        Прва\r\n                                    </button>\r\n                                    {hasPreviousPage && (\r\n                                        <button className='btn green'\r\n                                            {...getPageItemProps({\r\n                                                pageValue: previousPage,\r\n                                                onPageChange: this.handlePageChange\r\n                                            })}\r\n                                        >\r\n                                            {\"<\"}\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {pages.map(page => {\r\n                                        let activePage = null;\r\n                                        if (currentPage === page) {\r\n                                        }\r\n                                        return (\r\n                                            <button className='btn green'\r\n                                                {...getPageItemProps({\r\n                                                    pageValue: page,\r\n                                                    key: page,\r\n                                                    style: activePage,\r\n                                                    onPageChange: this.handlePageChange\r\n                                                })}\r\n                                            >\r\n                                                {page}\r\n                                            </button>\r\n                                        );\r\n                                    })}\r\n\r\n                                    {hasNextPage && (\r\n                                        <button className='btn green'\r\n                                            {...getPageItemProps({\r\n                                                pageValue: nextPage,\r\n                                                onPageChange: this.handlePageChange\r\n                                            })}\r\n                                        >\r\n                                            {\">\"}\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    <button className='btn green'\r\n                                        {...getPageItemProps({\r\n                                            pageValue: totalPages,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        Последна\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvicesList","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport AdvicesList from './AdvicesList';\r\n\r\nclass ListingAdvices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filtered: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let currentList = [];\r\n        let newList = [];\r\n        if (e.target.value !== \"\") {\r\n            currentList = this.props.advices;\r\n            newList = currentList.filter(item => {\r\n                const lc = item.title.toLowerCase();\r\n                const filter = e.target.value.toLowerCase();\r\n                if (lc.includes(filter)) {\r\n                    newList.push(item);\r\n                    this.setState({\r\n                        filtered: newList\r\n                    })\r\n                    return this.state;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                filtered: newList\r\n            })\r\n            return this.state;\r\n        }\r\n    }\r\n    render() {\r\n        let { advices } = this.props;\r\n        if (this.state.filtered.length !== 0) {\r\n            advices = this.state.filtered\r\n        }\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Пребарај...\" />\r\n                <AdvicesList advices={advices} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        advices: state.firestore.ordered.advices\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'advices' }\r\n    ])\r\n)(ListingAdvices)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport ListingAdvices from '../Advices/ListingAdvices'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Advices extends Component {\r\n    render() {\r\n        const { advices } = this.props;\r\n        const now = advices !== undefined ? (<ListingAdvices advices={advices} />) : (<p className='white-text'>no</p>)\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col m4 about-us\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to='/breeds'>\r\n                                <button className=\"btn green darken-2 my-btns\">Раси</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/advices'>\r\n                                <button className=\"btn green darken-2 my-btns\">Совети</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/interests'>\r\n                                <button className=\"btn green darken-2 my-btns\">Занимливости</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/aboutus'>\r\n                                <button className=\"btn green darken-2 my-btns\">За нас</button>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='col m8'>\r\n                    <h2 className=\"white-text center\" id=\"aboutUs\">Совети</h2>\r\n                    {now}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        advices: state.firestore.ordered.advices\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'advices' }\r\n    ])\r\n)(Advices)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport FormatParagraph from '../FormatParagraph'\r\n\r\nconst AdviceDetail = (props) => {\r\n  const { advice } = props;\r\n  if (advice) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{advice.title}</span>\r\n            <p id='modify'>{FormatParagraph(advice.paragraph1)}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text center\">\r\n            <img src={advice.image}></img>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div id='modify'>{FormatParagraph(advice.paragraph2)}</div>\r\n          </div>\r\n          {advice.image2 !== undefined ? \r\n            (<div className=\"card-action grey lighten-4 grey-text center\">\r\n                <img src={advice.image2}></img>\r\n            </div>) \r\n            : null}\r\n          {advice.paragraph3 !== undefined ?\r\n            (<div className=\"card-content\">\r\n                <div id='modify'>{FormatParagraph(advice.paragraph3)}</div>\r\n            </div>)\r\n            : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Sе вчитува...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const advices = state.firestore.data.advices;\r\n  const advice = advices ? advices[id] : null\r\n  return {\r\n    advice: advice\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'advices' }\r\n  ])\r\n)(AdviceDetail) ","import React from 'react'\r\nimport LongText from '../LongText';\r\n\r\nconst BreedSummary = ({ breed }) => {\r\n    return (\r\n        <div className='card z-depth-0 form-showing'>\r\n            <div className='card-content grey-text text-darken-3'>\r\n                <div className='row'>\r\n                    <div className='col m3 center'>\r\n                        <img src={breed.image} alt='img' className='img-content'></img>\r\n                    </div>\r\n                    <div className='col m8'>\r\n                        <span className='card-title'>{breed.title}</span>                     \r\n                        <LongText content={breed.paragraph1} limit={200} />\r\n                        <p>{breed.date}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BreedSummary","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport BreedSummary from './BreedSummary'\r\nimport Pagination from \"react-paginating\";\r\n\r\nclass BreedsList extends Component {\r\n    state = {\r\n        currentPage: 1\r\n    };\r\n\r\n    handlePageChange = (page, e) => {\r\n        this.setState({\r\n            currentPage: page\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const limit = 2;\r\n        const breeds = this.props.breeds;\r\n        const pageCount = 3;\r\n        const total = breeds.length * limit;\r\n        const { currentPage } = this.state;\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {breeds.map((breed, index) => (\r\n                        <Link to={'/breed/' + breed.id} key={breed.id}>\r\n                            {index >= ((currentPage - 1) * limit) && index < (currentPage * limit) ? <BreedSummary breed={breed} /> : null}\r\n                        </Link>\r\n                    ))}\r\n                </ul>\r\n                <div className='row center'>\r\n                    <Pagination\r\n                        total={total}\r\n                        limit={limit}\r\n                        pageCount={pageCount}\r\n                        currentPage={currentPage}\r\n                    >\r\n                        {({\r\n                            pages,\r\n                            currentPage,\r\n                            hasNextPage,\r\n                            hasPreviousPage,\r\n                            previousPage,\r\n                            nextPage,\r\n                            totalPages,\r\n                            getPageItemProps\r\n                        }) => (\r\n                                <div>\r\n                                    <button className='btn green'\r\n                                        {...getPageItemProps({\r\n                                            pageValue: 1,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        Прва\r\n                    </button>\r\n                                    {hasPreviousPage && (\r\n                                        <button className='btn green'\r\n                                            {...getPageItemProps({\r\n                                                pageValue: previousPage,\r\n                                                onPageChange: this.handlePageChange\r\n                                            })}\r\n                                        >\r\n                                            {\"<\"}\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {pages.map(page => {\r\n                                        let activePage = null;\r\n                                        if (currentPage === page) {                                      \r\n                                        }\r\n                                        return (\r\n                                            <button className='btn green'\r\n                                                {...getPageItemProps({\r\n                                                    pageValue: page,\r\n                                                    key: page,\r\n                                                    style: activePage,\r\n                                                    onPageChange: this.handlePageChange\r\n                                                })}\r\n                                            >\r\n                                                {page}\r\n                                            </button>\r\n                                        );\r\n                                    })}\r\n\r\n                                    {hasNextPage && (\r\n                                        <button className='btn green'\r\n                                            {...getPageItemProps({\r\n                                                pageValue: nextPage,\r\n                                                onPageChange: this.handlePageChange\r\n                                            })}\r\n                                        >\r\n                                            {\">\"}\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    <button className='btn green'\r\n                                        {...getPageItemProps({\r\n                                            pageValue: totalPages,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        Последна\r\n                    </button>\r\n                                </div>\r\n                            )}\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BreedsList\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport BreedsList from './BreedsList';\r\n\r\nclass ListingBreeds extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filtered: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        let currentList = [];\r\n        let newList = [];\r\n        if (e.target.value !== \"\") {\r\n            currentList = this.props.breeds;\r\n            newList = currentList.filter(item => {\r\n                const lc = item.title.toLowerCase();\r\n                const filter = e.target.value.toLowerCase();\r\n                if (lc.includes(filter)) {\r\n                    newList.push(item);\r\n                    this.setState({\r\n                        filtered: newList\r\n                    })\r\n                    return this.state;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                filtered: newList\r\n            })\r\n            return this.state;\r\n        }   \r\n    }\r\n    render() {\r\n        let { breeds } = this.props;\r\n        if(this.state.filtered.length !== 0){\r\n            breeds = this.state.filtered\r\n        }\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Пребарај...\" />\r\n                <BreedsList breeds={breeds} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        breeds: state.firestore.ordered.breeds\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'breeds', orderBy: [\"date\", 'desc'] }\r\n    ])\r\n)(ListingBreeds)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport ListingBreeds from '../Breeds/ListingBreeds'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Breeds extends Component {\r\n    render() {\r\n        let { breeds } = this.props;\r\n        const now = breeds !== undefined ? (<ListingBreeds breeds={breeds} />) : (<p className='white-text'>Loading</p>)\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col m4 about-us\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to='/breeds'>\r\n                                <button className=\"btn green darken-2 my-btns active\">Раси</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/advices'>\r\n                                <button className=\"btn green darken-2 my-btns\">Совети</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/interests'>\r\n                                <button className=\"btn green darken-2 my-btns\">Занимливости</button>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/aboutus'>\r\n                                <button className=\"btn green darken-2 my-btns\">За нас</button>                            \r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='col m8'>\r\n                    <h2 className=\"white-text center\" id=\"aboutUs\">Раси</h2>\r\n                    {now}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        breeds: state.firestore.ordered.breeds\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'breeds' }\r\n    ])\r\n)(Breeds)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport FormatParagraph from '../FormatParagraph'\r\n\r\nconst BreedDetail = (props) => {\r\n  const { breed } = props;\r\n  if (breed) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{breed.title}</span>\r\n            <p id='modify'>{FormatParagraph(breed.paragraph1)}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text center\">\r\n            <img src={breed.image} width=\"400px\" height=\"300px\"></img>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div id='modify'>{FormatParagraph(breed.paragraph2)}</div>\r\n          </div>\r\n          {breed.image2 !== undefined ?\r\n            (<div className=\"card-action grey lighten-4 grey-text center\">\r\n              <img src={breed.image2}></img>\r\n            </div>)\r\n            : null}\r\n          {breed.paragraph3 !== undefined ?\r\n            (<div className=\"card-content\">\r\n              <div id='modify'>{FormatParagraph(breed.paragraph3)}</div>\r\n            </div>)\r\n            : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Sе вчитува...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const breeds = state.firestore.data.breeds;\r\n  const breed = breeds ? breeds[id] : null\r\n  return {\r\n    breed: breed\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'advices' }\r\n  ])\r\n)(BreedDetail) ","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Footer from './components/layout/Footer'\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/project/CreateProject';\r\nimport ProjectDetails from './components/project/ProjectDetails'\r\nimport Listing from './components/project/Listing';\r\nimport AboutUs from './components/AboutUs/AboutUs'\r\nimport Interests from './components/Interests/Interests'\r\nimport InterestDetail from './components/Interests/InterestDetail'\r\nimport Advices from './components/Advices/Advices'\r\nimport AdviceDetail from './components/Advices/AdviceDetail';\r\nimport Breeds from './components/Breeds/Breeds'\r\nimport BreedDetail from './components/Breeds/BreedDetail';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/' component={Dashboard}></Route>\r\n            <Route path='/projects' component={Listing}></Route>\r\n            <Route path='/project/:id' component={ProjectDetails}></Route>\r\n            <Route path='/signin' component={SignIn}></Route>\r\n            <Route path='/signup' component={SignUp}></Route>\r\n            <Route path='/create' component={CreateProject}></Route>\r\n            <Route path='/aboutus' component={AboutUs}></Route>\r\n            <Route path='/interests' component={Interests}></Route>\r\n            <Route path='/interest/:id' component={InterestDetail}></Route>\r\n            <Route path='/advices' component={Advices}></Route>\r\n            <Route path='/advice/:id' component={AdviceDetail}></Route>\r\n            <Route path='/breeds' component={Breeds}></Route>\r\n            <Route path='/breed/:id' component={BreedDetail}></Route>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGGIN_ERROR': {\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        }\r\n        case 'LOGGIN_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        }\r\n        case 'SIGNOUT_SUCCESS': {\r\n            return state;\r\n        }\r\n        case 'SIGNUP_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        }\r\n        case 'SIGNUP_ERROR': {\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':     \r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyB2bat9DH3-7iP20haMAd_1vuR7n63trVc\",\r\n  authDomain: \"dogfiesta-779d4.firebaseapp.com\",\r\n  databaseURL: \"https://dogfiesta-779d4.firebaseio.com\",\r\n  projectId: \"dogfiesta-779d4\",\r\n  storageBucket: \"dogfiesta-779d4.appspot.com\",\r\n  messagingSenderId: \"333881126885\",\r\n  appId: \"1:333881126885:web:f95ba9f17f08833e\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\n\r\nexport {\r\n  storage, firebase as default\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }), // redux binding for firebase\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n  serviceWorker.unregister();\r\n});\r\n\r\n\r\n"],"sourceRoot":""}